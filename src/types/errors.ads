
with Interfaces.C; use Interfaces.C;
--  This package defines the different error codes.
package Errors with
  SPARK_Mode => On,
  Abstract_State => (Error_State),
  Initializes => (Error_State)
is
   ADA_EPERM : constant int := 1;
   ADA_ENOENT : constant int := 2;
   ADA_ESRCH : constant int := 3;
   ADA_EINTR : constant int := 4;
   ADA_EIO : constant int := 5;
   ADA_ENXIO : constant int := 6;
   ADA_E2BIG : constant int := 7;
   ADA_ENOEXEC : constant int := 8;
   ADA_EBADF : constant int := 9;
   ADA_ECHILD : constant int := 10;
   ADA_EAGAIN : constant int := 11;
   ADA_ENOMEM : constant int := 12;
   ADA_EACCES : constant int := 13;
   ADA_EFAULT : constant int := 14;
   ADA_ENOTBLK : constant int := 15;
   ADA_EBUSY : constant int := 16;
   ADA_EEXIST : constant int := 17;
   ADA_EXDEV : constant int := 18;
   ADA_ENODEV : constant int := 19;
   ADA_ENOTDIR : constant int := 20;
   ADA_EISDIR : constant int := 21;
   ADA_EINVAL : constant int := 22;
   ADA_ENFILE : constant int := 23;
   ADA_EMFILE : constant int := 24;
   ADA_ENOTTY : constant int := 25;
   ADA_ETXTBSY : constant int := 26;
   ADA_EFBIG : constant int := 27;
   ADA_ENOSPC : constant int := 28;
   ADA_ESPIPE : constant int := 29;
   ADA_EROFS : constant int := 30;
   ADA_EMLINK : constant int := 31;
   ADA_EPIPE : constant int := 32;
   ADA_EDOM : constant int := 33;
   ADA_ERANGE : constant int := 34;
   ADA_EDEADLK : constant int := 35;
   ADA_ENAMETOOLONG : constant int := 36;
   ADA_ENOLCK : constant int := 37;
   ADA_ENOSYS : constant int := 38;
   ADA_ENOTEMPTY : constant int := 39;
   ADA_ELOOP : constant int := 40;
   ADA_EWOULDBLOCK : constant int := 11;
   ADA_ENOMSG : constant int := 42;
   ADA_EIDRM : constant int := 43;
   ADA_ECHRNG : constant int := 44;
   ADA_EL2NSYNC : constant int := 45;
   ADA_EL3HLT : constant int := 46;
   ADA_EL3RST : constant int := 47;
   ADA_ELNRNG : constant int := 48;
   ADA_EUNATCH : constant int := 49;
   ADA_ENOCSI : constant int := 50;
   ADA_EL2HLT : constant int := 51;
   ADA_EBADE : constant int := 52;
   ADA_EBADR : constant int := 53;
   ADA_EXFULL : constant int := 54;
   ADA_ENOANO : constant int := 55;
   ADA_EBADRQC : constant int := 56;
   ADA_EBADSLT : constant int := 57;
   ADA_EDEADLOCK : constant int := 35;
   ADA_EBFONT : constant int := 59;
   ADA_ENOSTR : constant int := 60;
   ADA_ENODATA : constant int := 61;
   ADA_ETIME : constant int := 62;
   ADA_ENOSR : constant int := 63;
   ADA_ENONET : constant int := 64;
   ADA_ENOPKG : constant int := 65;
   ADA_EREMOTE : constant int := 66;
   ADA_ENOLINK : constant int := 67;
   ADA_EADV : constant int := 68;
   ADA_ESRMNT : constant int := 69;
   ADA_ECOMM : constant int := 70;
   ADA_EPROTO : constant int := 71;
   ADA_EMULTIHOP : constant int := 72;
   ADA_EDOTDOT : constant int := 73;
   ADA_EBADMSG : constant int := 74;
   ADA_EOVERFLOW : constant int := 75;
   ADA_ENOTUNIQ : constant int := 76;
   ADA_EBADFD : constant int := 77;
   ADA_EREMCHG : constant int := 78;
   ADA_ELIBACC : constant int := 79;
   ADA_ELIBBAD : constant int := 80;
   ADA_ELIBSCN : constant int := 81;
   ADA_ELIBMAX : constant int := 82;
   ADA_ELIBEXEC : constant int := 83;
   ADA_EILSEQ : constant int := 84;
   ADA_ERESTART : constant int := 85;
   ADA_ESTRPIPE : constant int := 86;
   ADA_EUSERS : constant int := 87;
   ADA_ENOTSOCK : constant int := 88;
   ADA_EDESTADDRREQ : constant int := 89;
   ADA_EMSGSIZE : constant int := 90;
   ADA_EPROTOTYPE : constant int := 91;
   ADA_ENOPROTOOPT : constant int := 92;
   ADA_EPROTONOSUPPORT : constant int := 93;
   ADA_ESOCKTNOSUPPORT : constant int := 94;
   ADA_EOPNOTSUPP : constant int := 95;
   ADA_EPFNOSUPPORT : constant int := 96;
   ADA_EAFNOSUPPORT : constant int := 97;
   ADA_EADDRINUSE : constant int := 98;
   ADA_EADDRNOTAVAIL : constant int := 99;
   ADA_ENETDOWN : constant int := 100;
   ADA_ENETUNREACH : constant int := 101;
   ADA_ENETRESET : constant int := 102;
   ADA_ECONNABORTED : constant int := 103;
   ADA_ECONNRESET : constant int := 104;
   ADA_ENOBUFS : constant int := 105;
   ADA_EISCONN : constant int := 106;
   ADA_ENOTCONN : constant int := 107;
   ADA_ESHUTDOWN : constant int := 108;
   ADA_ETOOMANYREFS : constant int := 109;
   ADA_ETIMEDOUT : constant int := 110;
   ADA_ECONNREFUSED : constant int := 111;
   ADA_EHOSTDOWN : constant int := 112;
   ADA_EHOSTUNREACH : constant int := 113;
   ADA_EALREADY : constant int := 114;
   ADA_EINPROGRESS : constant int := 115;
   ADA_ESTALE : constant int := 116;
   ADA_EUCLEAN : constant int := 117;
   ADA_ENOTNAM : constant int := 118;
   ADA_ENAVAIL : constant int := 119;
   ADA_EISNAM : constant int := 120;
   ADA_EREMOTEIO : constant int := 121;
   ADA_EDQUOT : constant int := 122;
   ADA_ENOMEDIUM : constant int := 123;
   ADA_EMEDIUMTYPE : constant int := 124;
   function Get_Errno return int with Global => Error_State;
   pragma Import (C, Get_Errno, "__get_errno");
   --  Procedure P has no use but it is necessary to write a body to Errors
   --  to define the abstract state.
   procedure P;
end Errors;
