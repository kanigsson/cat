#include <errno.h>
with Interfaces.C; use Interfaces.C;

--  This package defines the different error codes.

package Errors with
  SPARK_Mode     => On,
  Abstract_State => (Error_State),
  Initializes    => (Error_State)
is
   ADA_EPERM : constant int := EPERM;
   ADA_ENOENT : constant int := ENOENT;
   ADA_ESRCH : constant int := ESRCH;
   ADA_EINTR : constant int := EINTR;
   ADA_EIO : constant int := EIO;
   ADA_ENXIO : constant int := ENXIO;
   ADA_E2BIG : constant int := E2BIG;
   ADA_ENOEXEC : constant int := ENOEXEC;
   ADA_EBADF : constant int := EBADF;
   ADA_ECHILD : constant int := ECHILD;
   ADA_EAGAIN : constant int := EAGAIN;
   ADA_ENOMEM : constant int := ENOMEM;
   ADA_EACCES : constant int := EACCES;
   ADA_EFAULT : constant int := EFAULT;
   ADA_ENOTBLK : constant int := ENOTBLK;
   ADA_EBUSY : constant int := EBUSY;
   ADA_EEXIST : constant int := EEXIST;
   ADA_EXDEV : constant int := EXDEV;
   ADA_ENODEV : constant int := ENODEV;
   ADA_ENOTDIR : constant int := ENOTDIR;
   ADA_EISDIR : constant int := EISDIR;
   ADA_EINVAL : constant int := EINVAL;
   ADA_ENFILE : constant int := ENFILE;
   ADA_EMFILE : constant int := EMFILE;
   ADA_ENOTTY : constant int := ENOTTY;
   ADA_ETXTBSY : constant int := ETXTBSY;
   ADA_EFBIG : constant int := EFBIG;
   ADA_ENOSPC : constant int := ENOSPC;
   ADA_ESPIPE : constant int := ESPIPE;
   ADA_EROFS : constant int := EROFS;
   ADA_EMLINK : constant int := EMLINK;
   ADA_EPIPE : constant int := EPIPE;
   ADA_EDOM : constant int := EDOM;
   ADA_ERANGE : constant int := ERANGE;
   ADA_EDEADLK : constant int := EDEADLK;
   ADA_ENAMETOOLONG : constant int := ENAMETOOLONG;
   ADA_ENOLCK : constant int := ENOLCK;
   ADA_ENOSYS : constant int := ENOSYS;
   ADA_ENOTEMPTY : constant int := ENOTEMPTY;
   ADA_ELOOP : constant int := ELOOP;
   ADA_EWOULDBLOCK : constant int := EWOULDBLOCK;
   ADA_ENOMSG : constant int := ENOMSG;
   ADA_EIDRM : constant int := EIDRM;
   ADA_ECHRNG : constant int := ECHRNG;
   ADA_EL2NSYNC : constant int := EL2NSYNC;
   ADA_EL3HLT : constant int := EL3HLT;
   ADA_EL3RST : constant int := EL3RST;
   ADA_ELNRNG : constant int := ELNRNG;
   ADA_EUNATCH : constant int := EUNATCH;
   ADA_ENOCSI : constant int := ENOCSI;
   ADA_EL2HLT : constant int := EL2HLT;
   ADA_EBADE : constant int := EBADE;
   ADA_EBADR : constant int := EBADR;
   ADA_EXFULL : constant int := EXFULL;
   ADA_ENOANO : constant int := ENOANO;
   ADA_EBADRQC : constant int := EBADRQC;
   ADA_EBADSLT : constant int := EBADSLT;
   ADA_EDEADLOCK : constant int := EDEADLOCK;
   ADA_EBFONT : constant int := EBFONT;
   ADA_ENOSTR : constant int := ENOSTR;
   ADA_ENODATA : constant int := ENODATA;
   ADA_ETIME : constant int := ETIME;
   ADA_ENOSR : constant int := ENOSR;
   ADA_ENONET : constant int := ENONET;
   ADA_ENOPKG : constant int := ENOPKG;
   ADA_EREMOTE : constant int := EREMOTE;
   ADA_ENOLINK : constant int := ENOLINK;
   ADA_EADV : constant int := EADV;
   ADA_ESRMNT : constant int := ESRMNT;
   ADA_ECOMM : constant int := ECOMM;
   ADA_EPROTO : constant int := EPROTO;
   ADA_EMULTIHOP : constant int := EMULTIHOP;
   ADA_EDOTDOT : constant int := EDOTDOT;
   ADA_EBADMSG : constant int := EBADMSG;
   ADA_EOVERFLOW : constant int := EOVERFLOW;
   ADA_ENOTUNIQ : constant int := ENOTUNIQ;
   ADA_EBADFD : constant int := EBADFD;
   ADA_EREMCHG : constant int := EREMCHG;
   ADA_ELIBACC : constant int := ELIBACC;
   ADA_ELIBBAD : constant int := ELIBBAD;
   ADA_ELIBSCN : constant int := ELIBSCN;
   ADA_ELIBMAX : constant int := ELIBMAX;
   ADA_ELIBEXEC : constant int := ELIBEXEC;
   ADA_EILSEQ : constant int := EILSEQ;
   ADA_ERESTART : constant int := ERESTART;
   ADA_ESTRPIPE : constant int := ESTRPIPE;
   ADA_EUSERS : constant int := EUSERS;
   ADA_ENOTSOCK : constant int := ENOTSOCK;
   ADA_EDESTADDRREQ : constant int := EDESTADDRREQ;
   ADA_EMSGSIZE : constant int := EMSGSIZE;
   ADA_EPROTOTYPE : constant int := EPROTOTYPE;
   ADA_ENOPROTOOPT : constant int := ENOPROTOOPT;
   ADA_EPROTONOSUPPORT : constant int := EPROTONOSUPPORT;
   ADA_ESOCKTNOSUPPORT : constant int := ESOCKTNOSUPPORT;
   ADA_EOPNOTSUPP : constant int := EOPNOTSUPP;
   ADA_EPFNOSUPPORT : constant int := EPFNOSUPPORT;
   ADA_EAFNOSUPPORT : constant int := EAFNOSUPPORT;
   ADA_EADDRINUSE : constant int := EADDRINUSE;
   ADA_EADDRNOTAVAIL : constant int := EADDRNOTAVAIL;
   ADA_ENETDOWN : constant int := ENETDOWN;
   ADA_ENETUNREACH : constant int := ENETUNREACH;
   ADA_ENETRESET : constant int := ENETRESET;
   ADA_ECONNABORTED : constant int := ECONNABORTED;
   ADA_ECONNRESET : constant int := ECONNRESET;
   ADA_ENOBUFS : constant int := ENOBUFS;
   ADA_EISCONN : constant int := EISCONN;
   ADA_ENOTCONN : constant int := ENOTCONN;
   ADA_ESHUTDOWN : constant int := ESHUTDOWN;
   ADA_ETOOMANYREFS : constant int := ETOOMANYREFS;
   ADA_ETIMEDOUT : constant int := ETIMEDOUT;
   ADA_ECONNREFUSED : constant int := ECONNREFUSED;
   ADA_EHOSTDOWN : constant int := EHOSTDOWN;
   ADA_EHOSTUNREACH : constant int := EHOSTUNREACH;
   ADA_EALREADY : constant int := EALREADY;
   ADA_EINPROGRESS : constant int := EINPROGRESS;
   ADA_ESTALE : constant int := ESTALE;
   ADA_EUCLEAN : constant int := EUCLEAN;
   ADA_ENOTNAM : constant int := ENOTNAM;
   ADA_ENAVAIL : constant int := ENAVAIL;
   ADA_EISNAM : constant int := EISNAM;
   ADA_EREMOTEIO : constant int := EREMOTEIO;
   ADA_EDQUOT : constant int := EDQUOT;
   ADA_ENOMEDIUM : constant int := ENOMEDIUM;
   ADA_EMEDIUMTYPE : constant int := EMEDIUMTYPE;

   function Get_Errno return int with Global => Error_State;
   pragma Import (C, Get_Errno, "__get_errno");

   --  Procedure P has no use but it is necessary to write a body to Errors
   --  to define the abstract state.
   procedure P;
end Errors;
